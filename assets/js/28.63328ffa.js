(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{307:function(e,t,a){"use strict";a.r(t);var s=a(10),r=Object(s.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"feature-브랜치를-생성하여-버전-관리하기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#feature-브랜치를-생성하여-버전-관리하기"}},[e._v("#")]),e._v(" Feature 브랜치를 생성하여 버전 관리하기")]),e._v(" "),t("p",[e._v("기능 개발을 하다보면, 완성된 작은 기능을 깃허브에 올려두고 싶을 것이다. 하지만 기존 소스코드에 바로 병합하기는 그렇고, 완성된 기능이 들어가기전에 논의가 필요할 경우 feature 브랜치 단위로 기능들을 기록해두면 좋다.")]),e._v(" "),t("p",[e._v("develop -> feature\n을 기준으로")]),e._v(" "),t("p",[e._v("먼저 기능 개발전에 develop 브랜치를 기준으로 pull 해준다.")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git pull origin develop\n")])])]),t("p",[e._v("후에 해당 프로젝트 폴더에서 개발을 진행하고")]),e._v(" "),t("p",[e._v("feature 브랜치로 관리해야 겠다! 하면")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git checkout -b feature/기능이름\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("git push origin feature/기능이름\n")])])]),t("p",[e._v("이러면 feature 브랜치가 새로 생성되어 저장된 것을 깃허브에서 확인할 수 있을 것이다")]),e._v(" "),t("p",[e._v("후에 해당 feature가 필요하면 pr을 올려 merge를 진행하면 된다")])])}),[],!1,null,null,null);t.default=r.exports}}]);